							
###################
#
#	Mk model 
#


## helpers
taxa <- morpho.names()
num_taxa <- taxa.size()
num_branches <- 2 * num_taxa - 3

# set my moves vector
moves = VectorMoves()


##############
# Tree model #
##############

# Set up branch length hyperprior with a move
#br_len_lambda ~ dnExp(0.2)
#moves.append( mvScale(br_len_lambda, weight=2) )



# Define the tree parameter.
# First, we generate the topology.
# We assume a uniform prior on topology.
tree_length ~ dnExponential(1)
moves.append( mvSlide(tree_length) )

relative_bl ~ dnDirichlet(rep(1, num_branches))
moves.append( mvBetaSimplex(relative_bl, weight = num_branches / 2.0) )

bl := tree_length * relative_bl

topology ~ dnUniformTopology(taxa)
moves.append( mvNNI(topology, weight = num_branches / 2.0) )
moves.append( mvSPR(topology, weight = num_branches / 10.0) )

phylogeny := treeAssembly(topology, bl)

######################
# Substitution Model #
######################

#### specify the Jukes-Cantor substitution model applied uniformly to all sites ###
Q := fnJC(int(num_states)) 
#Q := fnJC(4)


###################
# PhyloCTMC Model #
###################


# the sequence evolution model
seq ~ dnPhyloCTMC(tree=phylogeny, Q=Q, type="Standard")

# attach the data
seq.clamp(morpho)




#############
# THE Model #
#############

# We define our model.
# We can use any node of our model as a handle, here we chose to use the rate matrix.
mymodel = model(phylogeny)




